I"*<h3><i><center>With the help of A. Rhee</center></i></h3>

<h2> Scientific modelling and the importance of peer review</h2>

<p>I’ve been carefully paying attention to the policies that governments have chosen to apply in response to the current <a href="https://en.wikipedia.org/wiki/2019%E2%80%9320_coronavirus_pandemic">coronavirus pandemic</a>, and, having many friends and colleagues in the UK, in particular to the <a href="https://www.gov.uk/government/publications/coronavirus-action-plan">UK government’s action plan</a>. 
Long story short, at first, the UK’s action plan varied from other countries’ plans by not imposing much restrictions on the population, and relied on the so-called <a href="https://en.wikipedia.org/wiki/Herd_immunity">herd immunity</a>; see, <i>e.g.</i>, <a href="https://www.theatlantic.com/health/archive/2020/03/coronavirus-pandemic-herd-immunity-uk-boris-johnson/608065/">this article</a>. 
(Luckily, the UK government has now come to reason and <a href="https://www.washingtonpost.com/world/europe/a-chilling-scientific-paper-helped-upend-us-and-uk-coronavirus-strategies/2020/03/17/aaa84116-6851-11ea-b199-3a9799c54512_story.html">changed its mind</a>, based on <a href="https://www.imperial.ac.uk/media/imperial-college/medicine/sph/ide/gida-fellowships/Imperial-College-COVID19-NPI-modelling-16-03-2020.pdf">this comprehensive report</a> from <a href="https://www.imperial.ac.uk/">Imperial College</a>.)
Following the presentation of the original plan based on herd immunity, I had a very heated argument with a friend of mine working for the UK government in London.
She is not a scientist (she studied English literature), but claimed that her government ‘‘knew better’’ and 
that its decisions were ‘‘based on science.’’
Well, as a mathematician and scientist, this <i>really</i> (<i>really</i>, <i>really</i>) puzzled me.</p>

<p>First, in this context, there is no such thing as (a single and true) science.
<a href="https://en.wikipedia.org/wiki/Mathematics">Mathematics</a> <i>is</i> science, in the sense that everything can be either true or false.
Here, what we have are <a href="https://en.wikipedia.org/wiki/Scientific_modelling">scientific models</a>, based on simplistic assumptions,
which try and represent the reality.
Those models often use <a href="https://en.wikipedia.org/wiki/Statistics">statisitical data</a> and lead to <a href="https://en.wikipedia.org/wiki/Computer_simulation">numerical simulations</a>, which give us a snapshot of the future, <i>i.e.</i>, a <a href="https://en.wikipedia.org/wiki/Prediction">prediction</a>.
This process of modelling, using data and performing numerical simulations introduces many errors, including modelling errors (the model is a simplified version of the phenomenon we’re describing), <a href="https://en.wikipedia.org/wiki/Bias_(statistics)">sample selection bias</a> (the data is not representative of the population), <a href="https://en.wikipedia.org/wiki/Numerical_error">numerical errors</a> (the problem we end up solving on the computer is itself an approximation of the model), and <a href="https://en.wikipedia.org/wiki/Software_bug">software bugs</a>.
My point is that this process is far from being perfect, but still gives us <i>some</i> indication of what the future <i>may</i> be.</p>

<p>Second, <a href="https://en.wikipedia.org/wiki/Research">research</a> in <a href="https://en.wikipedia.org/wiki/Academy">Academia</a> is based on <a href="https://en.wikipedia.org/wiki/Peer_review">peer review</a>. 
Once researchers believe they’ve come up with a new model and have obtained interesting results, they send their work to a <a href="https://en.wikipedia.org/wiki/Scientific_journal">scientific journal</a>.
This is the crucial step where experts in the field chosen by the journal can validate or invalidate the model, chek the data and verify the algorithms, comment on the results, make suggestions, ask questions and ultimaltey decided whether the paper should or should not be published.
The model and the numerical simulations that led to the UK government’s original plan were <i>never</i> published, even though <a href="https://en.wikipedia.org/wiki/Chris_Whitty">Prof Chris Witty</a> said <a href="https://www.bbc.com/news/science-environment-51892402">they intended to</a>; more than 500 academics critized the plan <a href="http://maths.qmul.ac.uk/~vnicosia/UK_scientists_statement_on_coronavirus_measures.pdf">in an open letter</a>.
As a scientist, how arrogant do you have to be to believe that you know better than everybody else and therefore doesn’t need to be peer reviewed, or, at least (given the urgency), make your model/simulations available?
As a politician or as an individual, believing so blindly in science is dangerous, especially when other countries adopt a completely different strategy; science isn’t a <a href="https://en.wikipedia.org/wiki/Dogma">dogma</a>.</p>

<p>Third, when the life of so many people is at risk (about 500,000 deaths in the UK in the worst-case scenario predicted by Imperial College), shouldn’t a government be overly precautious anyway? I’d rather have a government that may sightly overreact but protects vulnerable people.</p>

<h2>A simple model for the exponential spread of diseases</h2>

<p>I present in this section a (very) simple model for the spread of a disease, and illustrate how confinment helps to <i>flatten the curve</i>.
This was inspired by <a href="https://www.washingtonpost.com/graphics/2020/world/corona-simulator/">this excellent article</a> from the <a href="https://www.washingtonpost.com/">Washington Post</a>.
Here are the assumptions of my model:</p>
<ul>
  <li>indivuals are represented by points on a rectangular 2D domain;</li>
  <li>at every regular time interval, they move in a (normally distributed) random direction;</li>
  <li>if a sick indiviual get close enough to an healthy individual, the latter becomes sick;</li>
  <li>once they're sick, they'll recover after some time;</li>
  <li>once they've recovered, they cannot get sick again or carry the disease;</li>
  <li>there is initially a single sick indiviual.</li>
</ul>

<p>These assumptions are indeed overly simplistic, but let me tell you something, even papers like the report form Imperial College use simple models.</p>

<p>For my experiments I use the following parameters: list.</p>

<p>Give two pictures of results.</p>

<h2>How to flatten the curve</h2>

<p>Confinment is modelled by indiviuals not moving around. Same prameters. Results.</p>

<h2> Python code</h2>

<h1 id="this-file-explores-a-simple-model-to-mitigate-the-exponential-spread-of-a-disease">This file explores a simple model to mitigate the exponential spread of a disease.</h1>

<h1 id="packages">Packages:</h1>
<p>import numpy as np
import matplotlib.pyplot as plt
import cmath
from IPython.display import clear_output
from math import *</p>

<h1 id="parameters">Parameters:</h1>
<p>N = 50 # number of indiviuals
N_home = 40 # number of indiviuals staying at home
radius_contamination = 0.6 # radius of contamination
speed = 5 # speed of invidiuals
length_x = 10 # length in the x-direction
length_y = 10 # length in the y-direction
recovery_time = 5 # time to recover from the disease
time_step = 0.1 # integration time-step
end_time = 20 # end time of the time-integration</p>

<h1 id="set-up-intial-positions-as-complex-numbers">Set-up intial positions as complex numbers:</h1>
<p>positions = length_x<em>np.random.random_sample((N,1)) + 1j</em>length_y*np.random.random_sample((N,1))</p>

<h1 id="set-up-a-vector-to-indicate-whether-an-indiviual-is-healthy-or-sick-if-theyve-been-already-exposed-and-therefore">Set-up a vector to indicate whether an indiviual is healthy or sick, if they’ve been already exposed and therefore</h1>
<h1 id="are-immune-for-how-long-theyve-been-sick-and-if-theyre-staying-home">are immune, for how long they’ve been sick, and if they’re staying home:</h1>
<p>covid19 = np.zeros((N,1)) # 0 means healthy, 1 means sick
rand_indiv = np.random.randint(0,N)
covid19[rand_indiv] = 1 # choose a random indiviual to be sick
covid19_immunity = np.zeros((N,1)) # 0 means not immune, 1 means immune
covid19_immunity[rand_indiv] = 1
covid19_times = np.zeros((N,1))
covid19_at_home = np.zeros((N,1)) # 0 means free, 1 means staying at home
covid19_at_home[0:N_home] = 1</p>

<h1 id="plot-initial-conditions">Plot initial conditions:</h1>
<p>fig, axs = plt.subplots(1, 2)
axs[0].scatter(np.real(positions), np.imag(positions), c=covid19)
axs[0].axis(‘equal’)
axs[0].axis(‘square’)
axs[0].set(xlim=(0,length_x), ylim=(0,length_y))
axs[0].set_title(0)
axs[1].set(xlim=(0,end_time/time_step), ylim=(0,N))
plt.show()</p>

<h1 id="time-integration">Time-integration:</h1>
<p>t = 0 
number_sick_indivs = [1]
while t &lt;= end_time:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Update positions:
for k in range(0,N):
    
    # Pick a random angle for the velocity at each time:
    velocity = speed*np.exp(2*pi*np.random.random_sample()*1j) 
    
    # Update positions of the non-confined individuals:
    if (covid19_at_home[k] == 0):
        positions[k] = positions[k] + velocity*time_step
    
    # Periodic boundary conditions:
    if (np.real(positions[k])&gt;length_x):
        positions[k] = positions[k] - length_x
    elif (np.real(positions[k])&lt;0):
        positions[k] = positions[k] + length_x
    elif (np.imag(positions[k])&gt;length_y):
        positions[k] = positions[k] - 1j*length_y
    elif (np.imag(positions[k])&lt;0):
        positions[k] = positions[k] + 1j*length_y

    # Update covid19 times:
    if (covid19[k] == 1):
        covid19_times[k] = covid19_times[k] + time_step
    if (covid19_times[k] &gt;= recovery_time):
        covid19[k] = 0
        
# Update covid19 healthy/sick:
for k in range(0,N):
    for l in range(0,N):
        distance = abs(positions[k] - positions[l])
        if ((distance &lt; radius_contamination) &amp; (covid19[l] == 1) &amp; (covid19_immunity[k] == 0)):
            covid19[k] = 1 
            covid19_immunity[k] = 1
            break
    
# Plot new positions and number of sick individuals:
clear_output(wait=True)
fig, axs = plt.subplots(1, 2)
axs[0].scatter(np.real(positions), np.imag(positions), c=covid19)
axs[0].axis('equal')
axs[0].axis('square')
axs[0].set(xlim=(0,length_x), ylim=(0,length_y))
axs[0].set_xticks([])
axs[0].set_yticks([])
axs[0].set_title(round(t,2))
number_sick_indivs.append(np.sum(covid19))
axs[1].plot(number_sick_indivs, '.-')
axs[1].set(xlim=(0,end_time/time_step), ylim=(0, N))
axs[1].set_xticks([])
axs[1].set_title(round(t,2))
plt.show()

# Update time:
t = t + time_step
</code></pre></div></div>
:ET